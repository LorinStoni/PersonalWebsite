/* font Roboto from fonts.google.com */
@font-face {
    font-family: "Roboto Regular";
    src: url("src/fonts/Roboto/Roboto-Regular.ttf") format('truetype');
}

@font-face {
    font-family: "Roboto Thin";
    src: url("src/fonts/Roboto/Roboto-Thin.ttf") format('truetype');
}

:root {
    /* colors */
    --link: #598aeb;
    --link-hovered: #59e4ea;
    --field: #a7e8eb;
    --field-transparent: #a7e8ebcc;
    --input-field: var(--field);
    --input-field-border: #2a457a;
    --input-button: #2a457a;
    --input-button-hovered: #3b60ac;

    /* sizes */
    --margin-side: 2rem;
    --responsive-margin-side: 1rem;
    --border-radius: 0.3rem;
}

/*
    responsive sizes:
    - width smartphone < ~500px - ~800px
    - width tablet < ~1000px
*/


* {
    margin: 0;
    padding: 0;

    font-family: "Roboto Regular", sans-serif;
    color: black;
    font-size: 20px;
    box-sizing: border-box;
}

p {
    font-size: 1em;
}


/*
    icons
*/

.icon {
    display: inline;
    height: 1em;
    width: auto;
}

.icon.play {
    content: url('src/icons/play.svg');
}

.icon.menu {
    height: 1.5em;
    width: 1.5em;
}

.nav-menu-icon[aria-expanded="false"] > .icon.menu {
    content: url('src/icons/menu.svg');
}

.nav-menu-icon[aria-expanded="true"] > .icon.menu {
    content: url('src/icons/openmenu.svg');
}


/* all links in lists (e.g. in navigations) */
nav li > a,
.hover-effect.slide-in {
    display: block;

    text-decoration: none;
    color: white;

    border-radius: var(--border-radius);
    background-color: var(--link);

    position: relative;
    overflow: hidden;
    z-index: 1;
}

nav li > a::before,
.hover-effect.slide-in::before {
    content: '';
    background-color: var(--link-hovered);

    width: 0;

    position: absolute;
    top: 0;
    bottom: 0;
    left: 0;
    right: 0;

    transition: all 0.5s;
    z-index: -1;
}

nav li > a:hover::before,
.hover-effect.slide-in:hover:before {
    width: 100%;
    transition: all 0.5s;
}


/*
    header
*/

header {
    margin-top: 1em;
    padding: 4px var(--margin-side);

    background-color: var(--field);
    height: auto;

    display: grid;
    grid-template-rows: auto;
    grid-template-columns: 1fr auto;
    grid-auto-flow: column;

    align-items: center;
}

.header-title {
    font-size: 2.8em;
    text-decoration: none;
}

@media screen and (max-width: 500px) {

    .header-title {
        font-size: 2em;
    }
}


/*
    navigation
*/

nav > ul {
    list-style-type: none;

    align-content: center;

    display: flex;
    flex-wrap: wrap;
    gap: 1em;
}

nav a {
    padding: 14px;
}

nav a.current {
    background-color: var(--link-hovered);
}


/*
    mobile navigation
*/

.nav-menu-icon {
    display: none;
    cursor: pointer;
}

.mobile-nav {
    display: none;
    margin-left: var(--margin-side);
    margin-right: var(--margin-side);
}

/* responsive menu in smaller viewport */
@media screen and (max-width: 950px) {

    nav > ul {
        gap: 0;
    }

    .nav-menu-icon {
        display: block;
    }

    header nav li a {
        display: none;
    }

    .mobile-nav {
        display: block;
    }

    .mobile-nav > ul {
        gap: 0.5em;
        justify-content: center;
    }

    .mobile-nav[aria-expanded="false"] {
        height: 0;
        transform: rotateX(90deg);
        transition: all 0.5s;
    }

    .mobile-nav[aria-expanded="true"] {
        margin-top: 2em;
        height: auto;

        transform: rotateX(0deg);
        transition: all 0.5s;
    }
}


/*
    content
*/

main {
    margin: var(--margin-side);
    padding: 0;
}

main > p,
h1 ~ p {
    margin-bottom: 2em;
}

h1 {
    margin-bottom: 1rem;

    font-weight: inherit;
    font-size: 3em;
}

h2 {
    font-size: 2.5em;
    color: #5B5B5B;
}

@media screen and (max-width: 500px) {

    main {
        margin: var(--responsive-margin-side);
    }

    h1 {
        font-size: 2em;
    }

    h2 {
        font-size: 1.5em;
    }
}

main > nav > ul {
    flex-direction: column;
    align-content: flex-end;
    gap: 20px;
}

main > nav li {
    width: 60%;
}

.large-link {
    font-size: 2em;
    text-align: right;

    padding: 20px;

    background-color: var(--link);
    align-content: center;
}

.key-word {
    font-family: "Roboto Thin", sans-serif;
    font-size: 3em;
}

@media screen and (max-width: 1000px) {

    main > nav li {
        width: 100%;
    }

    .large-link {
        font-size: 1.5em;
    }

    .key-word {
        font-size: 2em;
    }
}

/* a list of fields (e.g. pairs) */
ul.fields-list {
    display: flex;
    flex-direction: column;
    gap: 1em;
    align-content: space-between;

    list-style: none;
}


/*
    container for image and text that appears on hover
*/

.image-container {
    grid-area: image;

    height: 40vh;
    width: 100%;
    justify-content: center;
    align-content: center;

    display: flex;

    /* hide image-description, when it is over the item */
    overflow: hidden;
    position: relative;
}

.image-container img {
    grid-column: 1;

    max-height: 100%;
    max-width: 100%;
    object-fit: contain;

    z-index: 0;
}

/* overlay of the image with a description of the image */
.image-container p {
    grid-column: 1;

    text-align: center;
    text-wrap: balance;
    background-color: var(--field-transparent);

    height: 100%;
    width: 100%;
    box-sizing: border-box;
    padding: 1em;

    opacity: 1;
    z-index: 2;
    position: absolute;
    bottom: -10px;
    transform: translateY(100%);
    transition: transform 1s ease;
}

.image-container:hover > p {
    z-index: 2;
    bottom: 0;
    transform: translateY(0%);
}

@media screen and (max-width: 800px) {

    .image-container {
        width: 80%;
    }
}


/*
    pair of an image and a description
*/
.pair {
    display: grid;
    grid-template-columns: 2fr minmax(auto, 1fr);
    gap: 2em;

    height: auto;

    align-items: stretch;
    justify-items: stretch;
}

.pair.image-first {
    grid-template-areas: "image description";
    grid-template-columns: auto 1fr;
}

.pair.description-first {
    grid-template-areas: "description image";
    grid-template-columns: 1fr auto;
}

.pair > .image-container {
    grid-area: image;
    height: auto;
}

/* smaller when the pair is in a fields-list (abilities) */
ul.fields-list .pair > .image-container > img {
    height: 15vh;
}

.pair > .image-container > img {
    height: auto;
    width: 100%;
    object-fit: contain;

    border-radius: var(--border-radius);
}

.pair > .image-container > p {
    font-size: 0.8em;
    padding: 0.2em;
}

.pair > .description {
    background-color: var(--field);
    padding: 1em 2em;
    border-radius: var(--border-radius);

    align-content: center;
}

.pair.image-first > .description * {
    text-align: right;
}

.pair > .description *:not(.key-word):not(:last-child) {
    padding-bottom: 0.5em;
}

.pair.description-first > .description * {
    text-align: left;
}

@media screen and (max-width: 1400px) {

    .pair > .image-container > img {
        max-width: 30vb;
    }

    .pair > .image-container > p {
        padding: 0.2em;
        font-size: 0.5em;
    }
}

@media screen and (max-width: 800px) {

    .pair.column-on-responsive {
        grid-template-columns: 100%;
        grid-template-rows: auto auto;
        grid-auto-flow: column;
        width: 100%;
    }

    .pair > .disappear-on-responsive {
        display: none;
    }

    .pair > .disappear-on-responsive ~ * {
        grid-column: 1 / -1;
    }

    .pair > .disappear-on-responsive ~ .description * {
        text-align: right;
    }

    .pair > .image-container {
        width: 100%;
    }

    .pair > .image-container > img {
        all: unset;
        width: 50%;
    }

    .pair > .description {
        padding: 1em;
    }
}


/*
    gallery
*/

.gallery {
    justify-content: center;

    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(500px, 1fr));
    grid-gap: 2em;
}

.gallery-item {
    display: grid;
    grid-template-areas:
        "image"
        "figcaption";
    justify-items: center;
}

.figcaption {
    text-align: center;
    padding: 0.5em;
}

.figcaption a {
    text-decoration: underline var(--link) 3px;
}

.figcaption a:hover {
    text-decoration: underline var(--link-hovered) 3px;
    transition: all 0.5s ease-in-out;
}

.figcaption a i {
    margin-left: 0.5em;
}

@media screen and (max-width: 1200px) {

    .gallery {
        grid-template-columns: repeat(auto-fit, minmax(400px, 1fr));
    }
}

@media screen and (max-width: 800px) {

    .gallery {
        grid-template-columns: repeat(auto-fit, 100%);
        grid-gap: 1em;
    }

    .gallery-item {
        grid-template-rows: auto auto;
    }

    .gallery-item .image-container {
        height: min-content;
        max-height: 25vh;
    }

    .gallery-item .image-container p {
        font-size: 0.9em;
        padding: 0.4em;
    }
}

@media screen and (max-width: 400px) {

    .gallery-item .image-container p {
        font-size: 0.7em;
        padding: 0.2em;
    }
}


/*
    opening grid (e.g. on page contact.html)
*/
.opening-grid {
    list-style-type: none;

    display: grid;
    gap: 0.5em;
}

.opening-grid * {
    color: white;
    text-align: right;
}

.opening-grid > .one-element {
    background-color: var(--link);
    border-radius: var(--border-radius);

    padding: 0.75em;
    width: 50%;
    justify-self: right;
}

.opening-grid > .one-element > *:nth-child(2) {
    display: none;
}

.opening-grid > .one-element:hover > *:nth-child(2) {
    display: inline;
}

.opening-grid > .one-element:hover > *:first-child {
    display: none;
}

@media screen and (max-width: 800px) {

    .opening-grid > .one-element {
        width: 100%;
    }
}

.contact-form > button {
    all: unset;
    cursor: pointer;
    box-sizing: border-box;
    width: 100%;
    background-color: var(--link);
    border-radius: var(--border-radius);

    margin-bottom: 0.5em;
    padding: 0.75em;
}

.contact-form > form {
    grid-template-columns: 1fr 1fr;
    grid-template-rows: repeat(5, auto) 1fr;
    gap: 0.5em;
}

.contact-form > form * {
    text-align: left;
}

.contact-form > form > *:not(.left, .right) {
    grid-column: 1 / -1;
}

.contact-form form[aria-expanded="true"] {
    display: grid;
}

.contact-form form[aria-expanded="false"] {
    display: none;
}

form > input,
form > textarea,
form > button {
    background-color: var(--input-field);
    padding: 1em;
    border: 1px solid var(--input-field-border);
    border-radius: var(--border-radius);
}

form > button {
    cursor: pointer;
    background-color: var(--input-button) !important;
}

form > button::before {
    background-color: var(--input-button-hovered) !important;
}

input::placeholder,
textarea::placeholder {
    color: white;
}

textarea {
    resize: vertical;
}

@media screen and (max-width: 800px) {

    .contact-form > form > * {
        grid-column: 1 / -1;
    }
}